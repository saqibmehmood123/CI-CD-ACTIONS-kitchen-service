# ===== SERVER CONFIG =====
server.port=8082

# ===== KAFKA BROKER CONNECTION =====
spring.kafka.bootstrap-servers=localhost:9092




# ===== DATABASE CONFIG (For Kitchen Service's own data) =====
spring.datasource.url=jdbc:h2:mem:kitchendb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true

spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop



## ===== CONSUMER CONFIGURATION (Listening to 'order-created-topic') =====
#spring.kafka.consumer.group-id=kitchen-service-group
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#
## Trust all packages for deserialization (for development)
#spring.kafka.consumer.properties.spring.json.trusted.packages=*
## Specify the type to deserialize to
#spring.kafka.consumer.properties.spring.json.value.default.type=com.fooddelievery.event.OrderCreatedEvent
#
## ===== PRODUCER CONFIGURATION (Sending to 'order-prepared-topic') =====
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
