name: Deploy Kitchen Service to EKS

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: "eu-west-3"
  ECR_REPOSITORY: "food-delivery/kitchen-service"
  EKS_CLUSTER_NAME: "fooddelivery-prod-cluster"
  K8S_NAMESPACE: "default"

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Update k8s manifest with new image
      run: |
        sed -i 's|884583303090.dkr.ecr.eu-west-3.amazonaws.com/food-delivery/kitchen-service:latest|${{ steps.build-image.outputs.image }}|' k8s/deploy.yaml

    - name: Configure kubectl for EKS
      uses: aws-actions/amazon-eks-set-kubectl@v1
      with:
        cluster-name: ${{ env.EKS_CLUSTER_NAME }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Deploy to EKS cluster
      run: |
        kubectl apply -f k8s/deploy.yaml
        kubectl apply -f k8s/service.yaml
        kubectl rollout status deployment/kitchen-service --timeout=300s
