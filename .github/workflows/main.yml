name: Deploy to EKS

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: eu-west-3
  ECR_REPOSITORY: food-delivery/kitchen-service
  EKS_CLUSTER: food-delivery-prod
  NAMESPACE: kitchen-service

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn clean package -U

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        sed -i "s|image:.*|image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" k8s/deployment.yaml

    - name: Update kubeconfig
      run: aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER

    - name: Deploy to EKS
      run: |
        kubectl create namespace $NAMESPACE --dry-run=client -o yaml | kubectl apply -f -
        kubectl label namespace $NAMESPACE eks.amazonaws.com/compute-type=fargate --overwrite
        kubectl apply -f k8s/ -n $NAMESPACE --validate=false
        
        # Wait for pods with debug info
        echo "=== Waiting for pods to start ==="
        timeout 300s bash -c 'until kubectl get pods -n $NAMESPACE -l app=kitchen-service | grep -q "Running"; do sleep 10; kubectl get pods -n $NAMESPACE; done'
        
        echo "=== Final pod status ==="
        kubectl get pods -n $NAMESPACE
        kubectl describe pods -n $NAMESPACE -l app=kitchen-service                    
